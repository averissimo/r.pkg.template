---
name: SuperLinter 🦸‍♀️

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main
  workflow_dispatch:
  workflow_call:
    inputs:
      lintr_error_on_lint:
        description: Produce an error when lints are found
        required: false
        type: boolean
        default: true
      lint-all-files:
        description: Lint all files every time
        default: false
        required: false
        type: boolean

concurrency:
  group: lint-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint-r-code:
    name: Lint R code 🧶
    runs-on: ubuntu-latest
    if: >
      !contains(github.event.commits[0].message, '[skip linter]')
        && github.event.pull_request.draft == false
    container:
      image: ghcr.io/insightsengineering/rstudio:latest
    steps:
      - name: Checkout repo 🛎
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ github.event.repository.name }}

      - name: Restore SD cache 💰
        uses: actions/cache@v3
        with:
          key: sd-${{ runner.os }}-${{ github.event.repository.name }}
          path: ~/.staged.dependencies

      - name: Run Staged dependencies 🎦
        uses: insightsengineering/staged-dependencies-action@v1
        env:
          GITHUB_PAT: ${{ secrets.REPO_GITHUB_TOKEN }}
        with:
          path: ${{ github.event.repository.name }}/${{ inputs.package-subdirectory }}
          enable-check: ${{ inputs.enable-staged-dependencies-check }}
          run-system-dependencies: ${{ inputs.install-system-dependencies }}
          direction: ${{ inputs.sd-direction }}

      - name: Install R package 🚧
        run: |
          if (file.exists("renv.lock")) renv::restore()
          install.packages(".", repos=NULL, type="source")
        shell: Rscript {0}
        working-directory: ${{ github.event.repository.name }}/${{ inputs.package-subdirectory }}

      - name: Changed files 🖋️
        id: files
        uses: Ana06/get-changed-files@v2.2.0
        with:
          format: 'json'
          filter: '*'

      - name: Lint 🧶
        run: |
          exclusions_list <- NULL
          if (!identical("${{ inputs.lint-all-files }}", "true")) {
            changed_files <- jsonlite::fromJSON('${{ steps.files.outputs.added_modified }}')
            all_files <- list.files(recursive = TRUE)
            exclusions_list <- as.list(setdiff(all_files, changed_files))
          }
          lints <- lintr::lint_package(exclusions = exclusions_list)
          if (length(lints) > 0L) {
            print(lints)
            if (identical("${{ inputs.lintr_error_on_lint }}", "true")) {
              stop("Lints detected. Please review and adjust code according to the comments provided.", call. = FALSE)
            }
          }
        shell: Rscript {0}
